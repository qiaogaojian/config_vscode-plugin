"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CommandPlugin = exports.transformCmd = void 0;
const engine_1 = require("@remixproject/engine");
const vscode_1 = require("vscode");
exports.transformCmd = (name, method) => `remix.${name}.${method}`;
// WIP
/**
 * Connect methods of the plugins with a command depending on the transformCmd function pass as option
 */
class CommandPlugin extends engine_1.Plugin {
    constructor(profile) {
        super(profile);
        this.subscriptions = [];
        this.setOptions({
            transformCmd: exports.transformCmd,
        });
    }
    setOptions(options) {
        return super.setOptions(options);
    }
    activate() {
        this.subscriptions = this.profile.methods
            .map((method) => {
            try {
                const cmd = this.options.transformCmd(this.profile.name, method);
                return vscode_1.commands.registerCommand(cmd, (...args) => this.callPluginMethod(method, args));
            }
            catch (err) {
                console.log(err);
            }
        })
            .filter((command) => {
            return command;
        });
        super.activate();
    }
    deactivate() {
        super.deactivate();
        this.subscriptions.forEach((sub) => sub.dispose());
    }
}
exports.CommandPlugin = CommandPlugin;
//# sourceMappingURL=command.js.map