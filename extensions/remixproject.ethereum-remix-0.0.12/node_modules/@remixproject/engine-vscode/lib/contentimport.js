"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ContentImportPlugin = void 0;
const tslib_1 = require("tslib");
const plugin_api_1 = require("@remixproject/plugin-api");
const command_1 = require("./command");
const remix_url_resolver_1 = require("@remix-project/remix-url-resolver");
class ContentImportPlugin extends command_1.CommandPlugin {
    constructor() {
        super(plugin_api_1.contentImportProfile);
        this.urlResolver = new remix_url_resolver_1.RemixURLResolver();
    }
    resolve(path) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            let resolved;
            try {
                resolved = yield this.urlResolver.resolve(path);
                const { content, cleanUrl, type } = resolved;
                return { content, cleanUrl, type, url: path };
            }
            catch (e) {
                throw Error(e.message);
            }
        });
    }
    // TODO: implement this method
    resolveAndSave(url, targetPath) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            return '';
        });
    }
}
exports.ContentImportPlugin = ContentImportPlugin;
//# sourceMappingURL=contentimport.js.map