import { IEditor, Annotation, HighlightPosition } from '@remixproject/plugin-api';
import { MethodApi } from '@remixproject/plugin-utils';
import { CommandPlugin, CommandOptions } from "./command";
export interface EditorOptions extends CommandOptions {
    language: string;
}
export declare class EditorPlugin extends CommandPlugin implements MethodApi<IEditor> {
    private decoration;
    private decorations;
    private diagnosticCollection;
    options: EditorOptions;
    constructor(options: EditorOptions);
    setOptions(options: EditorOptions): void;
    onActivation(): void;
    onDeactivation(): void;
    highlight(position: HighlightPosition, filePath: string, themeColor: string): Promise<void>;
    discardDecorations(): Promise<void>;
    discardHighlight(): Promise<void>;
    /**
     * Alisas of  discardHighlight
     * Required to match the standard interface of editor
     */
    discardHighlightAt(): Promise<void>;
    addAnnotation(annotation: Annotation, filePath?: string): Promise<void>;
    clearAnnotations(): Promise<void>;
}
