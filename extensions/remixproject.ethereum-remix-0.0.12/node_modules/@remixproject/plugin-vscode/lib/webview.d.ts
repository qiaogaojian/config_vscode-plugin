import type { Message, Api } from '@remixproject/plugin-utils';
import { ClientConnector, Client, PluginClient, PluginOptions } from '@remixproject/plugin';
/**
 * This Webview connector
 */
export declare class WebviewConnector implements ClientConnector {
    private options;
    source: {
        postMessage: (message: any, origin?: string) => void;
    };
    origin: string;
    isVscode: boolean;
    constructor(options?: Partial<PluginOptions<any>>);
    /** Send a message to the engine */
    send(message: Partial<Message>): void;
    /** Get messae from the engine */
    on(cb: (message: Partial<Message>) => void): void;
}
/**
 * Connect a Webview plugin client to a web engine
 * @param client An optional websocket plugin client to connect to the engine.
 */
export declare const createClient: <P extends Api, App extends Readonly<Record<string, Api>>>(client?: PluginClient<P, App>) => Client<P, App>;
